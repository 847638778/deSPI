#!/bin/bash


REFERENCE_LIB_PATH=$1
KMER_SIZE=31
TAXONOMY_TREE_PATH=$2
DESPI_BIN_PATH=$3
INDEX_DIR=$4

USAGE="
`basename $0` <REF_DIR> <NODE_PATH> <DESPI_BIN_DIR> <INDEX_DIR>

ARGUMENT
    <REF_DIR>                directory of reference library.
    <NODE_PATH>              location of nodes.dmp file.
    <DESPI_BIN_DIR>          directory of deSPI execuative files.
    <INDEX_DIR>              directory to store deSPI's index.
"

if [ $# -lt 5 ]
then
	echo "ERROR: Parameters are not enough"
	printf "$USAGE"
	exit 1
fi



check_for_jellyfish() {
	JELLYFISH_VERSION=$(jellyfish --version | awk '{print $2}')	
 	return [[ $JELLYFISH_VERSION =~ ^1\. ]]
}


if check_for_jellyfish
then
	find $REFERENCE_LIB_PATH/ -name '*.fna' | xargs -n 1 cat > deSPI-wgs.fa
	FILE_SIZE=$(ls -l deSPI-wgs.fa | awk '{print $7}')
		
	let JELLYFISH_HASH_SIZE=FILE_SIZE*115/100
	jellyfish count -m $KMER_SIZE -s $JELLYFISH_HASH_SIZE -t 4 deSPI-wgs.fa
	
	if [ -e "mer_counts_1" ]
	then
		jellyfish merge -o database.jdb.tmp mer_counts_*_
	else
		mv mer_counts_0 database.jdb.tmp
	mv database.jdb.tmp database.jdb
	
	if [ -f "$DESPI_BIN_PATH/deSPI-sort" ]
	then
		$DESPI_BIN_PATH/deSPI-sort database.jdb $KMER_SIZE
		mv deSPI-srt database.srt
		rm -f database.jdb
	else
		echo "deSPI-index requires deSPI-sort"
		exit 1
	fi
	
	if [ -f "$DESPI_BIN_PATH/deSPI" ]
	then
		$DESPI_BIN_PATH/deSPI index database.srt $TAXONOMY_TREE_PATH deSPI-wgs.fa $INDEX_DIR
	else
		echo "deSPI-index requires deSPI"
	fi	
	rm -f deSPI-wgs.fa database.srt
	cp $TAXONOMY_TREE_PATH $INDEX_DIR/map
else 
	echo "deSPI requires jellyfish version 1"
	exit 1

fi	




